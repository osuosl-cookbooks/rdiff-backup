#!/bin/bash

# rdiff-backup job script for $JOB managed by Chef. Changes will be overwritten.

# This script is normally run by cron, but can be run manually to start the job if it is not already running.

FILE=`basename $0`
DIR=`dirname $0`
JOB="${FILE%.sh}"
LOGPATH='/var/log/rdiff-backup'

# Prepends date to every line of stdin, then writes to both stdout and the log file.
function log() {
  sed "s/^/[`date +'%Y-%m-%d %H:%M:%S'`] /" | tee >(/usr/sbin/cronolog "${LOGPATH}/${JOB}/%Y-%m.log")
}

# Prepends date to every line of stdin, then writes to stdout and both the individual and general log files.
function logboth() {
  sed "s/^/[`date +'%Y-%m-%d %H:%M:%S'`] /" | tee >(/usr/sbin/cronolog "${LOGPATH}/${JOB}/%Y-%m.log") >(/usr/sbin/cronolog "${LOGPATH}/general/%Y-%m-%d.log" -S "${LOGPATH}/current.log")
}

# If we're root instead of the rdiff-backup server user, rerun the script as it.
if [ `id -un` != '<%= @suser %>' ]; then
  su <%= @suser %> -c $0
else
  echo '----------------------------------------' | log

  echo "Backup starting for '$JOB'..." | logboth
  nice -n 10 rdiff-backup <%= @args %> --backup-mode --force --create-full-path \
    --exclude-device-files --exclude-fifos --exclude-sockets --exclude-other-filesystems \
    --exclude-globbing-filelist "${DIR}/../../exclude/<%= @fqdn %>/<%= @src.gsub('/', '_') %>" \
    --remote-schema \
    <% if node['fqdn'] == @fqdn %>
    'sudo -u <%= @cuser %> %s' 'sudo rdiff-backup --server --restrict-read-only /::<%= @src %>' \
    <% else %>
    'ssh -tCp <%= @port %> -o StrictHostKeyChecking=no %s sudo rdiff-backup --server --restrict-read-only /' '<%= @cuser %>@<%= @fqdn %>::<%= @src %>' \
    <% end %>
    '<%= @dest %>' 2>&1 | log
  if [ ${PIPESTATUS[0]} -eq 0 ]; then
    echo "Backup complete for '$JOB'." | logboth
  else
    if [ -d <%= @dest %>/rdiff-backup-data ]; then
      echo "Backup failed for '$JOB'." | logboth
    else
      echo "First backup failed for '$JOB'." | logboth
    fi
  fi

  echo "Purging backups older than <%= @period %> for '$JOB'..." | logboth
  nice -n 10 rdiff-backup --force --remove-older-than <%= @period %> '<%= @dest %>' 2>&1 | log
  if [ ${PIPESTATUS[0]} -eq 0 ]; then
    echo "Purge complete for '$JOB'." | logboth
  else
    echo "Purge failed for '$JOB'." | logboth
  fi
fi
